---
- hosts: personal_workstations:personal_servers
  gather_facts: yes
  become: yes
  pre_tasks:
    - name: Stop wireguard client
      systemd:
        name: "wg-quick@{{ wg_client_defroute_int }}.service"
        state: stopped
      when: wg_client_defroute_int is defined
      become: yes

- hosts: personal_servers
  become: yes
  gather_facts: no
  tasks:
    - name: Add default /etc/hosts entries
      lineinfile:
        line: "127.0.0.1 {{ inventory_hostname.split('.') | first }} {{ inventory_hostname }}"
        path: /etc/hosts
        state: present
      tags: etchosts

    - name: Add additional /etc/hosts entries
      lineinfile:
        line: "{{ item }}"
        path: /etc/hosts
        state: present
      loop: "{{ etc_hosts_lines }}"
      when: etc_hosts_lines is defined
      tags: etchosts

- name: Import default playbook
  import_playbook: ../default/playbook-default.yml

- hosts: personal_workstations:personal_servers
  gather_facts: no
  roles:
    - role: htop
      tags: htop

- hosts: personal_workstations
  become: no
  gather_facts: no
  roles:
    - role: logcli
      tags: logcli
  tasks:
    - name: Ensure options in streamlink config
      blockinfile:
        path: ~/.config/streamlink/config
        create: yes
        block: |
          # Player options
          player=mpv
          player-no-close

- hosts: personal_workstations:personal_servers
  gather_facts: no
  roles:
    - role: cloudalchemy.node_exporter
      tags: node_exporter
# - role: promtail
#   tags: promtail

- hosts: docker
  become: yes
  gather_facts: no
  roles:
    - role: docker
      tags: docker

- hosts: prometheus
  become: no
  gather_facts: no
  roles:
    - role: prometheus
      tags:
        - docker
        - prometheus

- hosts: grafana
  become: no
  gather_facts: no
  roles:
    - role: grafana
      tags:
        - docker
        - grafana

- hosts: pihole_docker
  become: no
  gather_facts: no
  roles:
    - role: pihole_docker
      tags:
        - docker
        - pihole
        - pihole_docker

- hosts: homebridge
  become: no
  gather_facts: no
  roles:
    - role: homebridge
      tags:
        - docker
        - homebridge
    - role: homekit_enviroplus
      tags:
        - enviroplus

- hosts: enviroplus_exporter
  become: no
  gather_facts: no
  roles:
    - role: enviroplus_exporter
      tags:
        - enviroplus
        - enviroplus_exporter

- hosts: grow_hat_mini
  become: no
  gather_facts: no
  roles:
    - role: grow_hat_mini
      tags: grow_hat_mini

- hosts: personal_workstations:personal_servers
  become: yes
  gather_facts: no
  tasks:
    - name: Start wireguard client
      systemd:
        name: "wg-quick@{{ wg_client_defroute_int }}.service"
        state: started
      when: wg_client_defroute_int is defined

- hosts: k3s_cluster
  gather_facts: no
  become: yes
  tasks:
    - name: Create filesystem for k3s storage
      filesystem:
        fstype: ext4
        dev: /dev/sda1
        force: "{{ k3s_fs_create_force|default(false) }}"
      tags: k3s

    - name: Mount k3s storage
      mount:
        path: /var/lib/rancher
        src: /dev/sda1
        fstype: ext4
        opts: defaults,noatime
        state: present
      tags: k3s

- name: Import k3s playbook
  import_playbook: ../3rd_party/k3s-ansible/site.yml
  tags: k3s

- hosts: master
  gather_facts: no
  pre_tasks:
    - name: Copy remote kubeconfig
      command:
        cmd: "cp /etc/rancher/k3s/k3s.yaml /etc/rancher/k3s/k3s_with_hostname.yaml"
        creates: "/etc/rancher/k3s/k3s_with_hostname.yaml"
      become: yes
      tags:
        - k3s
        - kubeconfig

    - name: Replace hostname
      replace:
        path: "/etc/rancher/k3s/k3s_with_hostname.yaml"
        regexp: "127\\.0\\.0\\.1"
        replace: "{{ groups['master'] | first }}"
      become: yes
      tags:
        - k3s
        - kubeconfig

    # NOTE: If helm is complaining about connecting try "kubectl config view --raw >~/.kube/config.helm && mv ~/.kube/config{.helm,}"
    - name: Write kubeconfig
      fetch:
        src: "/etc/rancher/k3s/k3s_with_hostname.yaml"
        dest: ~/.kube/config
        flat: yes
      become: yes
      tags:
        - k3s
        - kubeconfig

    - name: Set perms on kubeconfig
      file:
        path: ~/.kube/config
        owner: "{{ ansible_user }}"
        mode: 0600
      become: no
      tags:
        - k3s
        - kubeconfig

- hosts: localhost
  connection: local
  gather_facts: no
  roles:
    - name: k3s_deployments
      tags:
        - k3s_deployments
        - k3s
