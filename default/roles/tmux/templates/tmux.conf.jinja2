### NPRENDERGAST ###

# Handle nested stuff better
set -g status-bg green 
setw -g window-status-current-bg green 

bind -n M-F11 set -qg status-bg green 
bind -n M-F12 set -qg status-bg cyan 
bind -n S-down \
	send-keys M-F12 \; \
	set -qg status-bg green \; \
	unbind -n S-left \; \
	unbind -n S-right \; \
	unbind -n S-C-left \; \
	unbind -n S-C-right \; \
	unbind -n C-t \; \
	set -qg prefix C-b
bind -n S-up \
	send-keys M-F11 \; \
	set -qg status-bg cyan \; \
	bind -n S-left  prev \; \
	bind -n S-right next \; \
	bind -n S-C-left swap-window -t -1 \; \
	bind -n S-C-right swap-window -t +1 \; \
	bind -n C-t new-window -a -c "#{pane_current_path}" \; \
	set -qg prefix C-s

# Statusbar
set-window-option -g window-status-current-bg yellow

# Pane controls
bind-key m set-window-option synchronize-panes
#bind-key n set-window-option synchronize-panes off
bind-key v join-pane -s !
bind-key b break-pane -t ':'
bind-key @ command-prompt -p "create pane from:"  "join-pane -s ':%%'"

# Logging
bind-key % pipe-pane "exec cat >>$HOME/tmux_logs/#W_`date +%s`.log" \; display-message 'Started logging to $HOME/tmux_logs/#W_`date +%s`.log'
bind-key 5 pipe-pane \; display-message 'Ended logging to $HOME/tmux_logs/#W_???.log'

# Misc
bind-key X lock-server
set-option -g default-terminal "screen-256color"

### NPRENDERGAST ###

# lower command delay
set -sg escape-time 1
# bind r to reloading the config file
bind r source-file ~/.tmux.conf \; display "Reloaded tmux config file."
# better mnemonics for splitting panes!
bind | split-window -h
bind - split-window -v
# vim / xmonad style bindings for pane movement
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
# vim / xmonad style bindings for window movement
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
# shift-movement keys will resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
## disable mouse support (at least while we're learning)
#set mouse-select-pane on
#setw -g mode-mouse off
#set -g mouse-select-pane off
#set -g mouse-resize-pane off
#set -g mouse-select-window off
# configure contents of status bar
#set -g status-utf8 on
set -g status-left-length 40
set -g status-left "#[fg=darkgreen]\"#S\""
#set -g status-right "#[fg=green] #h | %d %b %R"
set -g status-justify centre
setw -g monitor-activity on
set -g visual-activity on
# navigate using vim-style keys
setw -g mode-keys vi
# copy/paste using vim-style keys
bind Escape copy-mode
unbind p
bind p paste-buffer

# Copy Settings
{% if tmux_version.stdout|float < 2.5 %}
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
{% else %}
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down
unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi y         ;   bind-key -T copy-mode-vi y send-keys -X copy-selection
{% if ansible_distribution == 'MacOSX' %}
unbind-key -T copy-mode-vi Y         ;   bind-key -T copy-mode-vi Y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
{% else %}
unbind-key -T copy-mode-vi Y         ;   bind-key -T copy-mode-vi Y send-keys -X copy-pipe-and-cancel "xclip -selection clipboard >/dev/null"
{% endif %}
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection
{% endif %}

# set up aliases for temporarily maximizing panes
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp
# set up alias for turning on logging
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# fix for terminal-notifier
#set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

## tmux-resurrect
#run-shell ~/extras/tmux-resurrect/resurrect.tmux

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-sensible       \
  jbnicolai/tmux-fpp               \
'
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
