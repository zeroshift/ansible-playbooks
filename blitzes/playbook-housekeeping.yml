---
- hosts: workstations:personal_servers
  gather_facts: yes
  become: yes
  pre_tasks:
    # Free up bandwidth for updates
    - name: Stop wireguard client
      systemd:
        name: "wg-quick@{{ wg_client_defroute_int }}.service"
        state: stopped
      when: wg_client_defroute_int is defined

    # Free up resources for updates
    - name: Stop enviroplus services
      systemd:
        name: "{{ item }}"
        state: stopped
      loop:
        - enviroplus_exporter.service
        - enviroplus_lcd.service
      when: "'enviroplus_exporter' in group_names"

  tasks:
    - name: MacOS | Update/upgrade homebrew
      homebrew:
        update_homebrew: yes
        upgrade_all: yes
      become: no
      when: ansible_distribution == "MacOSX"

    - name: MacOS | Update/upgrade homebrew casks
      homebrew_cask:
        upgrade_all: yes
      become: no
      when: ansible_distribution == "MacOSX"

    - name: Debian/Ubuntu | Apt upgrade
      apt:
        upgrade: yes
        state: latest
        update_cache: yes
        cache_valid_time: 3600
        autoclean: yes
        autoremove: yes
      when: ansible_os_family == "Debian"

    - name: Gentoo | Sync and upgrade portage
      portage:
        package: 'sys-apps/portage'
        sync: yes
        oneshot: yes
      when: ansible_distribution == "Gentoo"

    - name: Gentoo | Upgrade all packages
      portage:
        package: '@world'
        update: yes
        deep: yes
        newuse: yes
        keepgoing: yes
        jobs: 8
        loadavg: 16
        quietbuild: yes
      when: ansible_distribution == "Gentoo"

    - name: Gentoo | Depclean
      portage:
        depclean: yes
      when: ansible_distribution == "Gentoo"

  post_tasks:
    - name: Start wireguard client
      systemd:
        name: "wg-quick@{{ wg_client_defroute_int }}.service"
        state: started
      when: wg_client_defroute_int is defined

    - name: Start enviroplus services
      systemd:
        name: "{{ item }}"
        state: started
      loop:
        - enviroplus_exporter.service
        - enviroplus_lcd.service
      when: "'enviroplus_exporter' in group_names"

- hosts: pihole
  gather_facts: no
  become: no
  tags: pihole
  vars:
    pi_hole_command: "pihole -up{{ ansible_check_mode | ternary(' --check-only', '') }}"
  tasks:
    - name: Update pihole
      command: "{{ pi_hole_command }}"
      register: pi_hole_update_result
      changed_when: "'update available' in pi_hole_update_result.stdout"
      check_mode: no
